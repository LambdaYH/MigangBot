"""init db

修订 ID: c3c52d7c9d07
父修订: ac57f7074e58
创建时间: 2023-10-29 11:30:46.197157

"""

from __future__ import annotations

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy import inspect

revision: str = "c3c52d7c9d07"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = ("ffxiv_fflogs",)
depends_on: str | Sequence[str] | None = None


def upgrade(name: str = "") -> None:
    if name:
        return
    insp = inspect(op.get_bind())
    if "ffxiv_fflogs_user" in insp.get_table_names():
        op.rename_table("ffxiv_fflogs_user", "ffxiv_fflogs_user_old")
        op.drop_table("ffxiv_fflogs_alembic_version")
    op.create_table(
        "ffxiv_fflogs_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("character_name", sa.String(), nullable=False),
        sa.Column("server_name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_ffxiv_fflogs_user")),
        info={"bind_key": "ffxiv_fflogs"},
    )
    with op.batch_alter_table("ffxiv_fflogs_user", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_ffxiv_fflogs_user_user_id"), ["user_id"], unique=True
        )


def downgrade(name: str = "") -> None:
    if name:
        return
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("ffxiv_fflogs_user", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_ffxiv_fflogs_user_user_id"))

    op.drop_table("ffxiv_fflogs_user")
    # ### end Alembic commands ###
